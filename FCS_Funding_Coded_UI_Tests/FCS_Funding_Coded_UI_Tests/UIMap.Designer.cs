// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace FCS_Funding_Coded_UI_Tests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Tested logging into the program with a username of "admin" and a password of "Admin".
        /// </summary>
        public void LoginTest()
        {
            #region Variable Declarations
            WpfEdit uIUsernameEdit = this.UILoginWindow.UIUsernameEdit;
            WpfEdit uIPasswordEdit = this.UILoginWindow.UIPasswordEdit;
            WpfButton uILoginButton = this.UILoginWindow.UILoginButton;
            #endregion

            // Launch '%USERPROFILE%\Desktop\Spring2016\Software Engineering 3\FCS-Funding-2\FCS-Project\FCS_Funding_WPF\FCS_Funding\bin\Debug\FCS_Funding.exe'
            ApplicationUnderTest uILoginWindow = ApplicationUnderTest.Launch(this.LoginTestParams.UILoginWindowExePath, this.LoginTestParams.UILoginWindowAlternateExePath);

            // Type 'admin' in 'Username' text box
            uIUsernameEdit.Text = this.LoginTestParams.UIUsernameEditText;

            // Click 'Password' text box
            Mouse.Click(uIPasswordEdit, new Point(99, 27));

            // Type '********' in 'Password' text box
            Keyboard.SendKeys(uIPasswordEdit, this.LoginTestParams.UIPasswordEditSendKeys, true);

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(117, 9));
        }
        
        /// <summary>
        /// Tested inserting a patient.
        /// </summary>
        public void TestInsertPatient()
        {
            #region Variable Declarations
            WpfEdit uIUsernameEdit = this.UILoginWindow.UIUsernameEdit;
            WpfEdit uIPasswordEdit = this.UILoginWindow.UIPasswordEdit;
            WpfButton uILoginButton = this.UILoginWindow.UILoginButton;
            WpfButton uICreateNewPatientButton = this.UIMainWindowWindow.UIItemTabList.UIPatientsTabPage.UICreateNewPatientButton;
            WpfEdit uIItemEdit = this.UICreateNewPatientWindow.UIItemEdit;
            WpfEdit uIItemEdit1 = this.UICreateNewPatientWindow.UIItemEdit1;
            WpfEdit uIItemEdit2 = this.UICreateNewPatientWindow.UIItemEdit2;
            WpfEdit uIItemEdit3 = this.UICreateNewPatientWindow.UIItemEdit3;
            WpfCheckBox uIIsHeadofHouseholdCheckBox = this.UICreateNewPatientWindow.UIIsHeadofHouseholdCheckBox;
            WpfComboBox uIGenderComboBox = this.UICreateNewPatientWindow.UIGenderComboBox;
            WpfComboBox uIAgeGroupComboBox = this.UICreateNewPatientWindow.UIAgeGroupComboBox;
            WpfComboBox uIEthnicityComboBox = this.UICreateNewPatientWindow.UIEthnicityComboBox;
            WpfCheckBox uIFirstMemberofHousehoCheckBox = this.UICreateNewPatientWindow.UIFirstMemberofHousehoCheckBox;
            WpfButton uIAddClientButton = this.UICreateNewPatientWindow.UIAddClientButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            WpfEdit uIItemEdit4 = this.UICreateHouseholdWindow.UIItemEdit;
            WpfEdit uIItemEdit11 = this.UICreateHouseholdWindow.UIItemEdit1;
            WpfComboBox uIIncomeComboBox = this.UICreateHouseholdWindow.UIIncomeComboBox;
            WpfButton uIAddHouseholdButton = this.UICreateHouseholdWindow.UIAddHouseholdButton;
            WpfButton uIRefreshButton = this.UIMainWindowWindow.UIItemTabList.UIPatientsTabPage.UIRefreshButton;
            #endregion

            // Launch '%USERPROFILE%\Desktop\Spring2016\Software Engineering 3\FCS-Funding-2\FCS-Project\FCS_Funding_WPF\FCS_Funding\bin\Debug\FCS_Funding.exe'
            ApplicationUnderTest uILoginWindow = ApplicationUnderTest.Launch(this.TestInsertPatientParams.UILoginWindowExePath, this.TestInsertPatientParams.UILoginWindowAlternateExePath);

            // Type 'admin' in 'Username' text box
            uIUsernameEdit.Text = this.TestInsertPatientParams.UIUsernameEditText;

            // Type '{Tab}' in 'Username' text box
            Keyboard.SendKeys(uIUsernameEdit, this.TestInsertPatientParams.UIUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            Keyboard.SendKeys(uIPasswordEdit, this.TestInsertPatientParams.UIPasswordEditSendKeys, true);

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(47, 21));

            // Click 'Create New Patient' button
            Mouse.Click(uICreateNewPatientButton, new Point(196, 51));

            // Type '50' in text box
            uIItemEdit.Text = this.TestInsertPatientParams.UIItemEditText;

            // Type 'codedUITest' in text box numbered 2 in 'CreateNewPatient' window
            uIItemEdit1.Text = this.TestInsertPatientParams.UIItemEdit1Text;

            // Type 'lastName' in text box numbered 3 in 'CreateNewPatient' window
            uIItemEdit2.Text = this.TestInsertPatientParams.UIItemEdit2Text;

            // Click text box numbered 4 in 'CreateNewPatient' window
            Mouse.Click(uIItemEdit3, new Point(106, 42));

            // Select 'Is Head of Household?' check box
            uIIsHeadofHouseholdCheckBox.Checked = this.TestInsertPatientParams.UIIsHeadofHouseholdCheckBoxChecked;

            // Select 'Female' in 'Gender' combo box
            uIGenderComboBox.SelectedItem = this.TestInsertPatientParams.UIGenderComboBoxSelectedItem;

            // Select '45-54' in 'AgeGroup' combo box
            uIAgeGroupComboBox.SelectedItem = this.TestInsertPatientParams.UIAgeGroupComboBoxSelectedItem;

            // Select 'Asian' in 'ethnicity' combo box
            uIEthnicityComboBox.SelectedItem = this.TestInsertPatientParams.UIEthnicityComboBoxSelectedItem;

            // Select 'First Member of Household?' check box
            uIFirstMemberofHousehoCheckBox.Checked = this.TestInsertPatientParams.UIFirstMemberofHousehoCheckBoxChecked;

            // Click 'Add Client' button
            Mouse.Click(uIAddClientButton, new Point(78, 26));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(83, 27));

            // Type 'Is head' in text box numbered 4 in 'CreateNewPatient' window
            uIItemEdit3.Text = this.TestInsertPatientParams.UIItemEdit3Text;

            // Click 'Add Client' button
            Mouse.Click(uIAddClientButton, new Point(141, 25));

            // Type '2' in text box
            uIItemEdit4.Text = this.TestInsertPatientParams.UIItemEditText1;

            // Type 'North Pole' in text box numbered 2 in 'CreateHousehold' window
            uIItemEdit11.Text = this.TestInsertPatientParams.UIItemEdit1Text1;

            // Select '$35,000+' in 'income' combo box
            uIIncomeComboBox.SelectedItem = this.TestInsertPatientParams.UIIncomeComboBoxSelectedItem;

            // Click 'Add Household' button
            Mouse.Click(uIAddHouseholdButton, new Point(165, 37));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(53, 26));

            // Click 'Refresh' button
            Mouse.Click(uIRefreshButton, new Point(210, 34));
        }
        
        #region Properties
        public virtual LoginTestParams LoginTestParams
        {
            get
            {
                if ((this.mLoginTestParams == null))
                {
                    this.mLoginTestParams = new LoginTestParams();
                }
                return this.mLoginTestParams;
            }
        }
        
        public virtual TestInsertPatientParams TestInsertPatientParams
        {
            get
            {
                if ((this.mTestInsertPatientParams == null))
                {
                    this.mTestInsertPatientParams = new TestInsertPatientParams();
                }
                return this.mTestInsertPatientParams;
            }
        }
        
        public UILoginWindow UILoginWindow
        {
            get
            {
                if ((this.mUILoginWindow == null))
                {
                    this.mUILoginWindow = new UILoginWindow();
                }
                return this.mUILoginWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UICreateNewPatientWindow UICreateNewPatientWindow
        {
            get
            {
                if ((this.mUICreateNewPatientWindow == null))
                {
                    this.mUICreateNewPatientWindow = new UICreateNewPatientWindow();
                }
                return this.mUICreateNewPatientWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        
        public UICreateHouseholdWindow UICreateHouseholdWindow
        {
            get
            {
                if ((this.mUICreateHouseholdWindow == null))
                {
                    this.mUICreateHouseholdWindow = new UICreateHouseholdWindow();
                }
                return this.mUICreateHouseholdWindow;
            }
        }
        #endregion
        
        #region Fields
        private LoginTestParams mLoginTestParams;
        
        private TestInsertPatientParams mTestInsertPatientParams;
        
        private UILoginWindow mUILoginWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UICreateNewPatientWindow mUICreateNewPatientWindow;
        
        private UIOKWindow mUIOKWindow;
        
        private UICreateHouseholdWindow mUICreateHouseholdWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class LoginTestParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\Spring2016\Software Engineering 3\FCS-Funding-2\FCS-Project\FCS_Funding_WPF\FCS_Funding\bin\Debug\FCS_Funding.exe'
        /// </summary>
        public string UILoginWindowExePath = "C:\\Users\\Kenneth\\Desktop\\Spring2016\\Software Engineering 3\\FCS-Funding-2\\FCS-Proj" +
            "ect\\FCS_Funding_WPF\\FCS_Funding\\bin\\Debug\\FCS_Funding.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\Spring2016\Software Engineering 3\FCS-Funding-2\FCS-Project\FCS_Funding_WPF\FCS_Funding\bin\Debug\FCS_Funding.exe'
        /// </summary>
        public string UILoginWindowAlternateExePath = "%USERPROFILE%\\Desktop\\Spring2016\\Software Engineering 3\\FCS-Funding-2\\FCS-Project" +
            "\\FCS_Funding_WPF\\FCS_Funding\\bin\\Debug\\FCS_Funding.exe";
        
        /// <summary>
        /// Type 'admin' in 'Username' text box
        /// </summary>
        public string UIUsernameEditText = "admin";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "NyBJ9O1fhPe6fVpGjzOJroVoW2H5adUk";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestInsertPatient'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class TestInsertPatientParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\Spring2016\Software Engineering 3\FCS-Funding-2\FCS-Project\FCS_Funding_WPF\FCS_Funding\bin\Debug\FCS_Funding.exe'
        /// </summary>
        public string UILoginWindowExePath = "C:\\Users\\Kenneth\\Desktop\\Spring2016\\Software Engineering 3\\FCS-Funding-2\\FCS-Proj" +
            "ect\\FCS_Funding_WPF\\FCS_Funding\\bin\\Debug\\FCS_Funding.exe";
        
        /// <summary>
        /// Launch '%USERPROFILE%\Desktop\Spring2016\Software Engineering 3\FCS-Funding-2\FCS-Project\FCS_Funding_WPF\FCS_Funding\bin\Debug\FCS_Funding.exe'
        /// </summary>
        public string UILoginWindowAlternateExePath = "%USERPROFILE%\\Desktop\\Spring2016\\Software Engineering 3\\FCS-Funding-2\\FCS-Project" +
            "\\FCS_Funding_WPF\\FCS_Funding\\bin\\Debug\\FCS_Funding.exe";
        
        /// <summary>
        /// Type 'admin' in 'Username' text box
        /// </summary>
        public string UIUsernameEditText = "admin";
        
        /// <summary>
        /// Type '{Tab}' in 'Username' text box
        /// </summary>
        public string UIUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "NyBJ9O1fhPe6fVpGjzOJroVoW2H5adUk";
        
        /// <summary>
        /// Type '50' in text box
        /// </summary>
        public string UIItemEditText = "50";
        
        /// <summary>
        /// Type 'codedUITest' in text box numbered 2 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit1Text = "codedUITest";
        
        /// <summary>
        /// Type 'lastName' in text box numbered 3 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit2Text = "lastName";
        
        /// <summary>
        /// Select 'Is Head of Household?' check box
        /// </summary>
        public bool UIIsHeadofHouseholdCheckBoxChecked = true;
        
        /// <summary>
        /// Select 'Female' in 'Gender' combo box
        /// </summary>
        public string UIGenderComboBoxSelectedItem = "Female";
        
        /// <summary>
        /// Select '45-54' in 'AgeGroup' combo box
        /// </summary>
        public string UIAgeGroupComboBoxSelectedItem = "45-54";
        
        /// <summary>
        /// Select 'Asian' in 'ethnicity' combo box
        /// </summary>
        public string UIEthnicityComboBoxSelectedItem = "Asian";
        
        /// <summary>
        /// Select 'First Member of Household?' check box
        /// </summary>
        public bool UIFirstMemberofHousehoCheckBoxChecked = true;
        
        /// <summary>
        /// Type 'Is head' in text box numbered 4 in 'CreateNewPatient' window
        /// </summary>
        public string UIItemEdit3Text = "Is head";
        
        /// <summary>
        /// Type '2' in text box
        /// </summary>
        public string UIItemEditText1 = "2";
        
        /// <summary>
        /// Type 'North Pole' in text box numbered 2 in 'CreateHousehold' window
        /// </summary>
        public string UIItemEdit1Text1 = "North Pole";
        
        /// <summary>
        /// Select '$35,000+' in 'income' combo box
        /// </summary>
        public string UIIncomeComboBoxSelectedItem = "$35,000+";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILoginWindow : WpfWindow
    {
        
        public UILoginWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Login";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Login");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Username";
                    this.mUIUsernameEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public WpfEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "Password";
                    this.mUIPasswordEdit.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public WpfButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[WpfButton.PropertyNames.Name] = "Login";
                    this.mUILoginButton.WindowTitles.Add("Login");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIUsernameEdit;
        
        private WpfEdit mUIPasswordEdit;
        
        private WpfButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItemTabList UIItemTabList
        {
            get
            {
                if ((this.mUIItemTabList == null))
                {
                    this.mUIItemTabList = new UIItemTabList(this);
                }
                return this.mUIItemTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTabList mUIItemTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemTabList : WpfTabList
    {
        
        public UIItemTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIPatientsTabPage UIPatientsTabPage
        {
            get
            {
                if ((this.mUIPatientsTabPage == null))
                {
                    this.mUIPatientsTabPage = new UIPatientsTabPage(this);
                }
                return this.mUIPatientsTabPage;
            }
        }
        #endregion
        
        #region Fields
        private UIPatientsTabPage mUIPatientsTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIPatientsTabPage : WpfTabPage
    {
        
        public UIPatientsTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Patients";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UICreateNewPatientButton
        {
            get
            {
                if ((this.mUICreateNewPatientButton == null))
                {
                    this.mUICreateNewPatientButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICreateNewPatientButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CreateNewPat";
                    this.mUICreateNewPatientButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICreateNewPatientButton;
            }
        }
        
        public WpfButton UIRefreshButton
        {
            get
            {
                if ((this.mUIRefreshButton == null))
                {
                    this.mUIRefreshButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIRefreshButton.SearchProperties[WpfButton.PropertyNames.Name] = "Refresh";
                    this.mUIRefreshButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIRefreshButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUICreateNewPatientButton;
        
        private WpfButton mUIRefreshButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICreateNewPatientWindow : WpfWindow
    {
        
        public UICreateNewPatientWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "CreateNewPatient";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("CreateNewPatient");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WpfEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mUIItemEdit1.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        
        public WpfEdit UIItemEdit2
        {
            get
            {
                if ((this.mUIItemEdit2 == null))
                {
                    this.mUIItemEdit2 = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit2.SearchProperties[WpfEdit.PropertyNames.Instance] = "3";
                    this.mUIItemEdit2.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIItemEdit2;
            }
        }
        
        public WpfEdit UIItemEdit3
        {
            get
            {
                if ((this.mUIItemEdit3 == null))
                {
                    this.mUIItemEdit3 = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit3.SearchProperties[WpfEdit.PropertyNames.Instance] = "4";
                    this.mUIItemEdit3.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIItemEdit3;
            }
        }
        
        public WpfCheckBox UIIsHeadofHouseholdCheckBox
        {
            get
            {
                if ((this.mUIIsHeadofHouseholdCheckBox == null))
                {
                    this.mUIIsHeadofHouseholdCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIIsHeadofHouseholdCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "Is Head of Household?";
                    this.mUIIsHeadofHouseholdCheckBox.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIIsHeadofHouseholdCheckBox;
            }
        }
        
        public WpfComboBox UIGenderComboBox
        {
            get
            {
                if ((this.mUIGenderComboBox == null))
                {
                    this.mUIGenderComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIGenderComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "Gender";
                    this.mUIGenderComboBox.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIGenderComboBox;
            }
        }
        
        public WpfComboBox UIAgeGroupComboBox
        {
            get
            {
                if ((this.mUIAgeGroupComboBox == null))
                {
                    this.mUIAgeGroupComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIAgeGroupComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "AgeGroup";
                    this.mUIAgeGroupComboBox.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIAgeGroupComboBox;
            }
        }
        
        public WpfComboBox UIEthnicityComboBox
        {
            get
            {
                if ((this.mUIEthnicityComboBox == null))
                {
                    this.mUIEthnicityComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIEthnicityComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "ethnicity";
                    this.mUIEthnicityComboBox.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIEthnicityComboBox;
            }
        }
        
        public WpfCheckBox UIFirstMemberofHousehoCheckBox
        {
            get
            {
                if ((this.mUIFirstMemberofHousehoCheckBox == null))
                {
                    this.mUIFirstMemberofHousehoCheckBox = new WpfCheckBox(this);
                    #region Search Criteria
                    this.mUIFirstMemberofHousehoCheckBox.SearchProperties[WpfCheckBox.PropertyNames.Name] = "First Member of Household?";
                    this.mUIFirstMemberofHousehoCheckBox.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIFirstMemberofHousehoCheckBox;
            }
        }
        
        public WpfButton UIAddClientButton
        {
            get
            {
                if ((this.mUIAddClientButton == null))
                {
                    this.mUIAddClientButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIAddClientButton.SearchProperties[WpfButton.PropertyNames.Name] = "Add Client";
                    this.mUIAddClientButton.WindowTitles.Add("CreateNewPatient");
                    #endregion
                }
                return this.mUIAddClientButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIItemEdit;
        
        private WpfEdit mUIItemEdit1;
        
        private WpfEdit mUIItemEdit2;
        
        private WpfEdit mUIItemEdit3;
        
        private WpfCheckBox mUIIsHeadofHouseholdCheckBox;
        
        private WpfComboBox mUIGenderComboBox;
        
        private WpfComboBox mUIAgeGroupComboBox;
        
        private WpfComboBox mUIEthnicityComboBox;
        
        private WpfCheckBox mUIFirstMemberofHousehoCheckBox;
        
        private WpfButton mUIAddClientButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICreateHouseholdWindow : WpfWindow
    {
        
        public UICreateHouseholdWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "CreateHousehold";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("CreateHousehold");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("CreateHousehold");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WpfEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.SearchProperties[WpfEdit.PropertyNames.Instance] = "2";
                    this.mUIItemEdit1.WindowTitles.Add("CreateHousehold");
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        
        public WpfComboBox UIIncomeComboBox
        {
            get
            {
                if ((this.mUIIncomeComboBox == null))
                {
                    this.mUIIncomeComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUIIncomeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "income";
                    this.mUIIncomeComboBox.WindowTitles.Add("CreateHousehold");
                    #endregion
                }
                return this.mUIIncomeComboBox;
            }
        }
        
        public WpfButton UIAddHouseholdButton
        {
            get
            {
                if ((this.mUIAddHouseholdButton == null))
                {
                    this.mUIAddHouseholdButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIAddHouseholdButton.SearchProperties[WpfButton.PropertyNames.Name] = "Add Household";
                    this.mUIAddHouseholdButton.WindowTitles.Add("CreateHousehold");
                    #endregion
                }
                return this.mUIAddHouseholdButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIItemEdit;
        
        private WpfEdit mUIItemEdit1;
        
        private WpfComboBox mUIIncomeComboBox;
        
        private WpfButton mUIAddHouseholdButton;
        #endregion
    }
}
